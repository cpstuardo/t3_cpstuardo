{"version":3,"sources":["components/Socket.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["socket","require","io","path","App","useState","name","message","state","setState","chat","setChat","code","airline","origin","destination","plane","seats","passengers","age","vuelos","setVuelos","position","setPosicion","useEffect","on","date","data","onTextChange","e","target","value","className","onSubmit","preventDefault","emit","map","index","size","color","Date","toLocaleString","TextField","onChange","label","variant","id","item","j","k","f","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.780c211a.chunk.js","sourcesContent":["const io = require(\"socket.io-client\");\r\nconst socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\r\n    path: '/flights'\r\n});\r\n\r\nexport default socket;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport socket from './components/Socket';\nimport React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField' ;\nimport { useEffect } from 'react/cjs/react.development';\nimport './App.css';\n\n\nfunction App() {\n  const [state, setState] = useState({name:'', message:''});\n  const [chat, setChat] = useState([]);\n  const [vuelos, setVuelos] = useState([{code:'Sin Informaci贸n', airline:'', origin:[-100,-100], destination:[-100,-100], plane:'', seats: 1, passengers:[{name:'', age:1}]}]);\n  const [posicion, setPosicion] = useState({code:'', position: [-100, -100]})\n\n  // CHAT\n  const messageSubmit = (e) => {\n    e.preventDefault()\n    const {name, message} = state\n    socket.emit('CHAT', {name: name, message: message})\n    setState({message: '', name: ''})\n  }\n\n  useEffect(() => {\n    socket.on('CHAT', ({name, message, date}) => {\n      setChat([...chat, {name, message, date}])\n    }) \n\n    socket.on('FLIGHTS', data => {\n      setVuelos(data)\n    })  \n\n    socket.on('POSITION', data => {\n      setPosicion(data)\n    })  \n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const renderChat = () => {\n    return chat.map(({name, message, date}, index) => (\n      <div key={index}>\n        <b>{name}: </b>{message} - <font size=\"2\" color=\"teal\"><em>{(new Date(date)).toLocaleString()}</em></font>\n      </div>\n    ))\n  }\n  \n\n  const getVuelos = (e) => {\n    e.preventDefault()\n    socket.emit('FLIGHTS')\n  }\n\n  const renderVuelos = () => {\n    return vuelos.map(({code, airline, origin, destination, plane, seats, passengers}, index) => (\n      <div key={index}>\n      <br></br>\n      <div className = \"card\">\n        <b>{code}- {airline}</b>\n        <br></br>\n        <b>Origen:</b> {origin.map((item, j)=> (\n            <div key={j}>\n              <li>{item}</li>\n            </div>))}\n        <b>Destino:</b> {destination.map((item, k)=> (\n            <div key={k}>\n              <li>{item}</li>\n            </div>))}\n        <b>Avi贸n:</b> {plane}\n        <br></br>\n        <b>Cantidad asientos:</b> {seats}\n        <br></br>\n        <b>Pasajeros:</b> {passengers.map(({name, age}, f)=> (\n            <div key={f}>\n             <li>{name} - {age}</li>\n            </div>))}\n      </div>\n      </div>\n    ))\n  }\n\n  \n  return (\n      <div className = \"App\">\n        <div className = \"header\">\n          <h1>Bienvenido a Vuelos</h1>\n          <form onSubmit= {getVuelos}>\n            <button>Solicitar informaci贸n de vuelos</button>\n          </form>\n        </div>\n        <div>\n          <div className=\"column-chat\">\n              <h2>Centro de control</h2>\n              <div className=\"container\">\n              {renderChat()}\n              </div>\n            <form onSubmit = {messageSubmit}>\n                <div className = \"name_field\">\n                  <TextField name= \"name\" onChange={e => onTextChange(e)} value={state.name} label=\"name\" variant=\"outlined\"/>\n                </div>\n                <br></br>\n                <div className = \"message_field\">\n                  <TextField name= \"message\" onChange={e => onTextChange(e)} value={state.message} label=\"message\" id=\"outlined-multiline-static\" variant=\"outlined\" />\n                </div>\n                <button>Enviar</button>\n            </form>\n          </div>\n        </div>\n        <div className=\"column-info\">\n          <h2>Informaci贸n de vuelos</h2>\n          {renderVuelos()}\n        </div>\n      </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}